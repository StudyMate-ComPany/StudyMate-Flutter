import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:shared_preferences/shared_preferences.dart';
import '../onboarding/onboarding_screen.dart';
import '../home/guest_main_screen.dart';

class SplashScreen extends StatefulWidget {
  const SplashScreen({super.key});

  @override
  State<SplashScreen> createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> 
    with SingleTickerProviderStateMixin {
  late AnimationController _progressController;
  late Animation<double> _progressAnimation;
  
  @override
  void initState() {
    super.initState();
    _progressController = AnimationController(
      duration: const Duration(seconds: 2),
      vsync: this,
    );
    _progressAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(
      parent: _progressController,
      curve: Curves.easeInOut,
    ));
    _progressController.forward();
    _initializeApp();
  }
  
  @override
  void dispose() {
    _progressController.dispose();
    super.dispose();
  }

  Future<void> _initializeApp() async {
    try {
      print('üöÄ [SplashScreen] Ïï± Ï¥àÍ∏∞Ìôî ÏãúÏûë');
      
      // ÏÉÅÌÉúÎ∞î Ïä§ÌÉÄÏùº ÏÑ§Ï†ï
      SystemChrome.setSystemUIOverlayStyle(
        const SystemUiOverlayStyle(
          statusBarColor: Colors.transparent,
          statusBarIconBrightness: Brightness.dark,
          statusBarBrightness: Brightness.light,
        ),
      );

      // ÏµúÏÜå 3Ï¥àÍ∞Ñ Ïä§ÌîåÎûòÏãú ÌôîÎ©¥ ÌëúÏãú
      await Future.delayed(const Duration(seconds: 3));

      if (!mounted) {
        print('‚ö†Ô∏è [SplashScreen] WidgetÏù¥ mounted ÏÉÅÌÉúÍ∞Ä ÏïÑÎãò');
        return;
      }

      // Ïò®Î≥¥Îî© ÏôÑÎ£å Ïó¨Î∂Ä ÌôïÏù∏
      final prefs = await SharedPreferences.getInstance();
      final hasCompletedOnboarding = prefs.getBool('hasCompletedOnboarding') ?? false;
      print('üì± [SplashScreen] Ïò®Î≥¥Îî© ÏôÑÎ£å Ïó¨Î∂Ä: $hasCompletedOnboarding');

      if (!mounted) {
        print('‚ö†Ô∏è [SplashScreen] WidgetÏù¥ mounted ÏÉÅÌÉúÍ∞Ä ÏïÑÎãò (2Ï∞® Ï≤¥ÌÅ¨)');
        return;
      }

      // ÌîåÎ°úÏö∞: Ïä§ÌîåÎûòÏãú -> Ïò®Î≥¥Îî©(Ï≤´ Ïã§Ìñâ) -> Î°úÍ∑∏Ïù∏ ÌôîÎ©¥
      if (!hasCompletedOnboarding) {
        print('üéØ [SplashScreen] Ïò®Î≥¥Îî© ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô');
        Navigator.pushReplacement(
          context,
          PageRouteBuilder(
            pageBuilder: (context, animation, secondaryAnimation) => const OnboardingScreen(),
            transitionsBuilder: (context, animation, secondaryAnimation, child) {
              return FadeTransition(opacity: animation, child: child);
            },
            transitionDuration: const Duration(milliseconds: 500),
          ),
        );
      } else {
        // Ïò®Î≥¥Îî©ÏùÑ ÏôÑÎ£åÌïú ÏÇ¨Ïö©ÏûêÎäî Í≤åÏä§Ìä∏ Î©îÏù∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô
        print('üéØ [SplashScreen] Í≤åÏä§Ìä∏ Î©îÏù∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô');
        Navigator.pushReplacement(
          context,
          PageRouteBuilder(
            pageBuilder: (context, animation, secondaryAnimation) => const GuestMainScreen(),
            transitionsBuilder: (context, animation, secondaryAnimation, child) {
              return FadeTransition(opacity: animation, child: child);
            },
            transitionDuration: const Duration(milliseconds: 500),
          ),
        );
      }
    } catch (e, stackTrace) {
      print('‚ùå [SplashScreen] ÏóêÎü¨ Î∞úÏÉù: $e');
      print('üìç Stack trace: $stackTrace');
      
      // ÏóêÎü¨ Î∞úÏÉù ÏãúÏóêÎèÑ Ïò®Î≥¥Îî© ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô
      if (mounted) {
        Navigator.pushReplacement(
          context,
          PageRouteBuilder(
            pageBuilder: (context, animation, secondaryAnimation) => const OnboardingScreen(),
            transitionsBuilder: (context, animation, secondaryAnimation, child) {
              return FadeTransition(opacity: animation, child: child);
            },
            transitionDuration: const Duration(milliseconds: 500),
          ),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF70C4DE), // Figma: RGB(112, 196, 222)
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // ÎßàÏä§ÏΩîÌä∏ Ïù¥ÎØ∏ÏßÄ - Figma: 159.41 x 159.41px
            Container(
              width: 159.41,
              height: 159.41,
              child: Image.asset(
                'assets/images/sm_main.png',
                fit: BoxFit.contain,
                errorBuilder: (context, error, stackTrace) {
                  return Container(
                    width: 159.41,
                    height: 159.41,
                    decoration: BoxDecoration(
                      color: Colors.white.withOpacity(0.2),
                      shape: BoxShape.circle,
                    ),
                    child: const Icon(
                      Icons.school,
                      color: Colors.white,
                      size: 80,
                    ),
                  );
                },
              ),
            ).animate()
              .fadeIn(duration: 600.ms)
              .scale(
                begin: const Offset(0.8, 0.8),
                end: const Offset(1, 1),
                duration: 500.ms,
              ),
            
            const SizedBox(height: 4), // Figma: 3.71px Í∞ÑÍ≤©
            
            // STUDYMATE ÌÖçÏä§Ìä∏ - Figma: ChangwonDangamAsac Bold, 26.69px
            const Text(
              'STUDYMATE',
              style: TextStyle(
                fontFamily: 'ChangwonDangamAsac',
                fontSize: 26.69,
                fontWeight: FontWeight.w700,
                color: Colors.white,
                letterSpacing: 0,
                height: 1.2, // 32.03px / 26.69px
              ),
            ).animate()
              .fadeIn(delay: 200.ms, duration: 500.ms),
            
            const SizedBox(height: 192), // Figma: STUDYMATEÏóêÏÑú Î∂ÄÏ†úÎ™©ÍπåÏßÄ Í∞ÑÍ≤©
            
            // "ÎÇòÎßåÏùò ÌïôÏäµÎèÑÏö∞ÎØ∏" - Figma: Pretendard SemiBold, 18px
            const Text(
              'ÎÇòÎßåÏùò ÌïôÏäµÎèÑÏö∞ÎØ∏',
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.w600,
                color: Colors.white,
                letterSpacing: 0,
                height: 1.44, // 26px / 18px
              ),
            ).animate()
              .fadeIn(delay: 400.ms, duration: 500.ms),
          ],
        ),
      ),
    );
  }
}